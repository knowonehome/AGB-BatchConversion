#$SCRIPT
import clr
clr.AddReference("System.Windows.Forms")
from System.Windows.Forms import DialogResult
clr.AddReference("System")
from System import Decimal

def main(args):
	#	Clear any debug trace from the trace window
	Debug.Clear()
	
	#	Create an Input object
	Input = AGBFactory.Get("Importer")
	
	#	Automatically add any undefined columns present in the spreadsheet but that
	#	you did not explicitly name below, when the spreadsheet is opened.
	Input.AutoAddUnknownColumns = False
	Input.IgnoreUnknownColumns = True
	
	Input.AddColumn("Customer Id", "string")
	Input.AddColumn("Customer Name", "string")
	Input.AddColumn("General Compensation Type", "string")
	Input.AddColumn("Coverage Type", "string")
	Input.AddColumn("Bill Effective Date", "date")
	Input.AddColumn("Paid Premium", "string")
	Input.AddColumn("Billed Subscriber Count","string")
	Input.AddColumn("Split Percentage", "string")
	Input.AddColumn("Rate", "string")
	Input.AddColumn("Paid Amount", "string")
	
	Output.AddColumn("IsPayee", "string")
	Output.AddColumn("PolicyNumber", "string")
	Output.AddColumn("Customer", "string")
	Output.AddColumn("LineOfBusiness", "string")
	Output.AddColumn("MonthPaid", "Bill Effective Date", "date")
	Output.AddColumn("Premium", "decimal")
	Output.AddColumn("NumSubscribers", "int")
	Output.AddColumn("AgencyPercent",  "decimal")
	Output.AddColumn("SubscriberRate", "string")
	Output.AddColumn("AgencyCommission",  "decimal")
	Output.AddColumn("LineNumber", "int")
	Output.AddColumn("IsImported", "string")
	Output.AddColumn("ErrDesc", "string")

	#	Open the Input file (spreadsheet)
	Input.Open(args["File"], args["Sheet"])

	#	Copy the Input column set to the output 
	#	(automatically maps the Input columns to the output columns)
	#Output.CopySchema(Input)

	#	If we had errors display them to the user.
	#	Possible errors are: Required column not present
	#	Unknown columns found (if neither Input.AutoAddUnknownColumns nor
	#	Input.IgnoreUnknownColumns is set to True)
	if Errors.Count > 0:
		viewer = AGBFactory.Get("ErrorViewer")
		viewer.ShowContinue = Input.CanContinue	#	User can choose to ignore and continue

		if viewer.ShowDialog() == DialogResult.Cancel:	#	Cancel
			return

	#	We've reported initialisation errors, now clear the error array
	Errors.Clear()
	LineNumber = 1

	#	For each Input record...
	while Input.ReadRecord():
		#	Create a new row and copy the Input record to the new row
		row = Output.CopyData(Input)

		#	Update the line number in the output row
		row["LineNumber"] = LineNumber
		LineNumber = LineNumber + 1
		
		#Check if is Payee
		if(Input["General Compensation Type"].AsString == "Override Detail"):
			row["IsPayee"] = "N"
		else:
			row["IsPayee"] = "Y"
						
		#Set PolicyNumber
		row["PolicyNumber"] = Input["Customer Id"].AsString
		
		#Set Customer
		row["Customer"] = Input["Customer Name"].AsString
		
		#Set LineOfBusiness
		CoverageType = Input["Coverage Type"].AsString
		if(CoverageType.find("Med") != -1):
			row["LineOfBusiness"] = "Medical"
		elif(CoverageType.find("Lif") != -1):
			row["LineOfBusiness"] = "Life"
		elif(CoverageType.find("Den") != -1):
			row["LineOfBusiness"] = "Dental"
		elif(CoverageType.find("Vis") != -1):
			row["LineOfBusiness"] = "Vision"
		elif(CoverageType.find("LTD") != -1):
			row["LineOfBusiness"] = "LTD"
		elif(CoverageType.find("STD") != -1):
			row["LineOfBusiness"] = "STD"
		else:
			row["LineOfBusiness"] = CoverageType
		
		#Set Premium and Rate need to take into account split percentage
		SplitPercentage = Decimal.Parse(Input["Split Percentage"].AsString.replace("%",""))/100
		Premium = Decimal.Parse(Input["Paid Premium"].AsString.replace("$","")) * SplitPercentage
		row["Premium"] = Premium
		
		Rate = Input["Rate"].AsString
		#check if subscriber based
		if(Rate.find("$") != -1):
			row["SubscriberRate"] = Decimal.Parse(Rate.replace("$",""))*SplitPercentage
			row["NumSubscribers"] = Input["Billed Subscriber Count"].AsInt
		#check if percentage based
		elif(Rate.find("%") != -1):
			row["AgencyPercent"] = Decimal.Parse(Rate.replace("%",""))/100
		#check if other
		elif (Rate.find("S") != -1):
			row["AgencyPercent"] = round(Decimal.Parse(Input["Paid Amount"].AsString.replace("$",""))/Premium,2)
		elif (Rate.find("270") != -1):
			row["AgencyPercent"] = round(Decimal.Parse(Input["Paid Amount"].AsString.replace("$",""))/Premium,2)
			row["SubscriberRate"]=  ""
		
		row["AgencyCommission"] = Decimal.Parse(Input["Paid Amount"].AsString.replace("$",""))
			
		
		#	Add the new row to the output data set
		Output.AddRow(row)

	#	Did we get any errors whilst processing the records? If so, show them
	if Errors.Count > 0:
		viewer = AGBFactory.Get("ErrorViewer")
		viewer.ShowDialog()

#$ENDSCRIPT